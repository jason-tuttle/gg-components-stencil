/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface GgInlineInput {
        /**
          * apply bold style the text of the input and display
         */
        "bold"?: boolean;
        /**
          * unique identifier for the input, should be `id` of model containing the text
         */
        "identifier"?: string;
        /**
          * the element is in "edit mode"
         */
        "isEditing": boolean;
        /**
          * the original text value of the input
         */
        "text"?: string;
    }
    interface GgListbuilder {
    }
    interface GgListbuilderHeader {
    }
    interface GgListbuilderHeaderItem {
    }
    interface GgListbuilderRow {
    }
    interface GgListbuilderRowItem {
    }
}
declare global {
    interface HTMLGgInlineInputElement extends Components.GgInlineInput, HTMLStencilElement {
    }
    var HTMLGgInlineInputElement: {
        prototype: HTMLGgInlineInputElement;
        new (): HTMLGgInlineInputElement;
    };
    interface HTMLGgListbuilderElement extends Components.GgListbuilder, HTMLStencilElement {
    }
    var HTMLGgListbuilderElement: {
        prototype: HTMLGgListbuilderElement;
        new (): HTMLGgListbuilderElement;
    };
    interface HTMLGgListbuilderHeaderElement extends Components.GgListbuilderHeader, HTMLStencilElement {
    }
    var HTMLGgListbuilderHeaderElement: {
        prototype: HTMLGgListbuilderHeaderElement;
        new (): HTMLGgListbuilderHeaderElement;
    };
    interface HTMLGgListbuilderHeaderItemElement extends Components.GgListbuilderHeaderItem, HTMLStencilElement {
    }
    var HTMLGgListbuilderHeaderItemElement: {
        prototype: HTMLGgListbuilderHeaderItemElement;
        new (): HTMLGgListbuilderHeaderItemElement;
    };
    interface HTMLGgListbuilderRowElement extends Components.GgListbuilderRow, HTMLStencilElement {
    }
    var HTMLGgListbuilderRowElement: {
        prototype: HTMLGgListbuilderRowElement;
        new (): HTMLGgListbuilderRowElement;
    };
    interface HTMLGgListbuilderRowItemElement extends Components.GgListbuilderRowItem, HTMLStencilElement {
    }
    var HTMLGgListbuilderRowItemElement: {
        prototype: HTMLGgListbuilderRowItemElement;
        new (): HTMLGgListbuilderRowItemElement;
    };
    interface HTMLElementTagNameMap {
        "gg-inline-input": HTMLGgInlineInputElement;
        "gg-listbuilder": HTMLGgListbuilderElement;
        "gg-listbuilder-header": HTMLGgListbuilderHeaderElement;
        "gg-listbuilder-header-item": HTMLGgListbuilderHeaderItemElement;
        "gg-listbuilder-row": HTMLGgListbuilderRowElement;
        "gg-listbuilder-row-item": HTMLGgListbuilderRowItemElement;
    }
}
declare namespace LocalJSX {
    interface GgInlineInput {
        /**
          * apply bold style the text of the input and display
         */
        "bold"?: boolean;
        /**
          * unique identifier for the input, should be `id` of model containing the text
         */
        "identifier"?: string;
        /**
          * the element is in "edit mode"
         */
        "isEditing"?: boolean;
        /**
          * Custom event emitted on Enter keydown or focusout
          * @event InlineInput#submitText
          * @type {object}
          * @property {string} id - passed-in `identifier` property
          * @property {string} text - current value of the input element
         */
        "onSubmitText"?: (event: CustomEvent<{ id: string; text: string }>) => void;
        /**
          * the original text value of the input
         */
        "text"?: string;
    }
    interface GgListbuilder {
    }
    interface GgListbuilderHeader {
    }
    interface GgListbuilderHeaderItem {
    }
    interface GgListbuilderRow {
    }
    interface GgListbuilderRowItem {
    }
    interface IntrinsicElements {
        "gg-inline-input": GgInlineInput;
        "gg-listbuilder": GgListbuilder;
        "gg-listbuilder-header": GgListbuilderHeader;
        "gg-listbuilder-header-item": GgListbuilderHeaderItem;
        "gg-listbuilder-row": GgListbuilderRow;
        "gg-listbuilder-row-item": GgListbuilderRowItem;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "gg-inline-input": LocalJSX.GgInlineInput & JSXBase.HTMLAttributes<HTMLGgInlineInputElement>;
            "gg-listbuilder": LocalJSX.GgListbuilder & JSXBase.HTMLAttributes<HTMLGgListbuilderElement>;
            "gg-listbuilder-header": LocalJSX.GgListbuilderHeader & JSXBase.HTMLAttributes<HTMLGgListbuilderHeaderElement>;
            "gg-listbuilder-header-item": LocalJSX.GgListbuilderHeaderItem & JSXBase.HTMLAttributes<HTMLGgListbuilderHeaderItemElement>;
            "gg-listbuilder-row": LocalJSX.GgListbuilderRow & JSXBase.HTMLAttributes<HTMLGgListbuilderRowElement>;
            "gg-listbuilder-row-item": LocalJSX.GgListbuilderRowItem & JSXBase.HTMLAttributes<HTMLGgListbuilderRowItemElement>;
        }
    }
}
